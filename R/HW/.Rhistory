cat('Получилось отрицательное число!')
} else if (a > 0) {
cat('Получилось положительное число!')
} else {
cat('Получился нуль!')
}
a = round(rnorm(1), 1)
if (a < 0) {
cat('Получилось отрицательное число!')
} else if (a > 0) {
cat('Получилось положительное число!')
} else {
cat('Получился нуль!')
}
a = round(rnorm(1), 1)
a
if (a < 0) {
cat('Получилось отрицательное число!')
} else if (a > 0) {
cat('Получилось положительное число!')
} else {
cat('Получился нуль!')
}
a = round(rnorm(1), 1)
a
if (a < 0) {
cat('Получилось отрицательное число!')
} else if (a > 0) {
cat('Получилось положительное число!')
} else {
cat('Получился нуль!')
}
Zone = c('СЃС‚РµРїСЊ',
'РЅРёР·РєРѕРіРѕСЂРЅС‹Рµ С€РёСЂРѕРєРѕР»РёСЃС‚РІРµРЅРЅС‹Рµ Р»РµСЃР° (РґСѓР±, РіСЂР°Р±)',
'СЃСЂРµРґРЅРµРіРѕСЂРЅС‹Рµ С€РёСЂРѕРєРѕР»РёСЃС‚РІРµРЅРЅС‹Рµ Р»РµСЃР° (Р±СѓРє)',
'СЃРјРµС€Р°РЅРЅС‹Рµ Р»РµСЃР° (РµР»СЊ, РїРёС…С‚Р°, Р±СѓРє)',
'РєСЂРёРІРѕР»РµСЃРёСЏ (Р±РµСЂРµР·Р°, Р±СѓРє, РєР»С‘РЅ)',
'СЃСѓР±Р°Р»СЊРїРёР№СЃРєРёРµ Рё Р°Р»СЊРїРёР№СЃРєРёРµ Р»СѓРіР°',
'СЃСѓР±РЅРёРІР°Р»СЊРЅР°СЏ Р·РѕРЅР° (С„СЂР°РіРјРµРЅС‚Р°СЂРЅР°СЏ СЂР°СЃС‚РёС‚РµР»СЊРЅРѕСЃС‚СЊ)',
'РіР»СЏС†РёР°Р»СЊРЅРѕ-РЅРёРІР°Р»СЊРЅР°СЏ Р·РѕРЅР°')
zones = data.frame(Hmin = c(400, Hmax[-length(Hmax)]),
Hmax,
Zone)
H = as.numeric(readline('Р’РІРµРґРёС‚Рµ РІС‹СЃРѕС‚Сѓ: '))
cat("Длина введенной строки равняется ", nchar(s), "символам")
s = readline('Р’РІРµРґРёС‚Рµ СЃС‚СЂРѕРєСѓ: ')
s = readline('Р’РІРµРґРёС‚Рµ СЃС‚СЂРѕРєСѓ: ')
cat("Длина введенной строки равняется ", nchar(s), "символам")
lat_1 = readline('Введите широту начальной точки:')
long_1 = readline('Введите долготу начальной точки:')
23
lat_2 = readline('Введите широту конечной точки:')
34234
lat_11 = as(lat_1, "integer")
class(lat_11)
lat_11 = as(lat_1, "numeric")
class(lat_11)
lat_ST = as.numeric(readline('Введите широту вашей точки:'))
lat_ST = as.numeric(readline('Введите широту вашей точки:'))
lat_START = as.numeric(readline('Введите широту начальной точки:'))
long_START = as.numeric(readline('Введите долготу начальной точки:'))
lat_FINISH = as.numeric(readline('Введите широту конечной точки:'))
long_FINISH = as.numeric(readline('Введите долготу начальной точки:'))
D = acos(sin(lat_START) * sin(lat_FINISH) + cos(lat_START) * cos(lat_FINISH) * cos( long_START - long_FINISH ))
S = D * 6371
D = acos(sin(lat_START) * sin(lat_FINISH) + cos(lat_START) * cos(lat_FINISH) * cos( long_START - long_FINISH ))
S = D * 6371
T = S / 850
if (long_START < 0) and (long_FINISH < 0) {
CrossMer = TRUE
#} else if (long_FINISH < 0) {
#  crossMer = TRUE
}
if (long_START < 0)  {
CrossMer = TRUE
#} else if (long_FINISH < 0) {
#  crossMer = TRUE
}
CrossMer
if (long_START > 0)  {
CrossMer = TRUE
#} else if (long_FINISH < 0) {
#  crossMer = TRUE
}
CrossMer
if (long_START > 0)  {
CrossMer = Teeee
} else {
CrossMer = fuuuuu
}
if (long_START > 0)  {
CrossMer = 1
} else {
CrossMer = 0
}
CrossMer
if (long_START < 0)  {
CrossMer = 1
} else {
CrossMer = 0
}
CrossMer
S = D * 6371
T = S / 850
round(S, 3)
if (long_START < 0)  {
CrossMer = 1
} else {
CrossMer = 0
}
round(S, 0)
S = round(S, 0)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
T = round(T, 1)
T = round(T, 2)
T = round(T, 2)
T = round(T, 100)
if (long_START < 0)  {
CrossMer = 1
} else {
CrossMer = 0
}
S = D * 6371
T = S / 850
S = round(S, 0)
T = round(T, 100)
T = round(T, 1)
T = round(T, 10)
T = round(T, 10)
if (long_START < 0)  {
CrossMer = 1
} else {
CrossMer = 0
}
T = S / 850
S = round(S, 0)
T = round(T, 10)
T = S / 850
S = round(S, 0)
T = round(T, 2)
if (long_START < 0)  {
CrossMer = 1
} else {
CrossMer = 0
}
CrossMer
if (long_START < 0) & (long_FINISH < 0 ) {
CrossMer = 1
} else {
CrossMer = 0
}
Answer
T = round(T, 2) # с округлением до 0.5 пока не справился
if (long_START < 0 | long_FINISH < 0) {
if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
} else {
Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
}
} else if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0) {
Answer = "Маршрут полета не пересекает нулевой меридиан и не пересекает 180-й меридиан."
}
Answer
lat_START = as.numeric(readline('Введите широту начальной точки:'))
long_START = as.numeric(readline('Введите долготу начальной точки:'))
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0){
} else if (long_START < 0 | long_FINISH < 0) {
Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
} else {
Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
}
Answer
Answer
if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0)  {
} else if (long_START < 0 | long_FINISH < 0) {
Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
} else {
Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
}
Answer
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
lat_START = as.numeric(readline('Введите широту начальной точки:'))
20
lat_START = as.numeric(readline('Введите широту начальной точки:'))
long_START = as.numeric(readline('Введите долготу начальной точки:'))
lat_FINISH = as.numeric(readline('Введите широту конечной точки:'))
long_FINISH = as.numeric(readline('Введите долготу конечной точки:'))
D = acos(sin(lat_START) * sin(lat_FINISH) + cos(lat_START) * cos(lat_FINISH) * cos( long_START - long_FINISH ))
S = D * 6371
T = S / 850
S = round(S, 0)
T = round(T, 2) # с округлением до 0.5 пока не справился
#  if (long_START < 0 | long_FINISH < 0) {
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#   } else {
#    Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#   } else {
#    Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
# }
#  } else if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0) {
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#   } else {
#    Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
# }
#  } else if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0) {
#   Answer = "Маршрут полета не пересекает нулевой меридиан и не пересекает 180-й меридиан."
#  }
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
lat_START = as.numeric(readline('Введите широту начальной точки:'))
long_START = as.numeric(readline('Введите долготу начальной точки:'))
lat_FINISH = as.numeric(readline('Введите широту конечной точки:'))
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
i = 0
while(i < 10) {
i = i+1
print(i)
}
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
#Cities  #пробный вывод фреймов
#Sections
Cities$Distance_source[1]
#Cities  #пробный вывод фреймов
#Sections
Cities$Distance_source[68]
#Cities  #пробный вывод фреймов
#Sections
Cities$Distance_source[6]
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#lat_START = lat_START * pi
phi
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
} else {
Answer = "Маршрут полета  пересекает нулевой меридиан и не пересекает 180-й меридиан."
}
} else if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0) {
Answer = "Маршрут полета не пересекает нулевой меридиан и не пересекает 180-й меридиан."
}
Answer
print(paste("Длина полета составила", S, "км, время в пути ~",Time, " часов.", Answer))
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
getwd()
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
getwd()
getwd()
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_04-2.R', encoding = 'UTF-8', echo=TRUE)
View(wind)
source('~/.active-rstudio-document', echo=TRUE)
force(quakes)
View(quakes)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(wind)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-1.R', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(result)
View(grouped)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', encoding = 'UTF-8', echo=TRUE)
View(storms2)
View(storms)
(storms2 = storms %>%
mutate(Date = as.Date(paste(year, month, day, sep = '/'))) %>%
group_by(name, year) %>%
arrange(Date) %>% # не обязательно
summarise(date_begin = min(Date),
date_end = max(Date),
duration = date_end - date_begin,
max_wind = max(wind),
min_pres = min(pressure)))
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', encoding = 'UTF-8', echo=TRUE)
View(storms2)
View(storms2)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-2.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Downloads/Class_03-2 (1).R', echo=TRUE)
View(storms2)
View(storms)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
View(tab_tidy)
View(tab)
View(tab_tidy)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
source('C:/Users/gorba/Downloads/Class_03-2 (1).R', echo=TRUE)
View(storms2)
tab_tidy %>%
group_by(height) %>%
summarize(mean_energy = mean(energy))
View(tab)
View(tab_tidy)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
View(tab_tidy)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-4.R', echo=TRUE)
View(okruga)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-4.R', echo=TRUE)
View(okruga)
View(okruga_tidy)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(soil)
View(soil)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(soil)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(soil)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(df)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
View(tab)
View(tab_tidy)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-4.R', echo=TRUE)
View(okruga)
View(okruga_tidy)
source('C:/Users/gorba/Downloads/Class_03-2 (2).R', echo=TRUE)
View(storms)
View(storms2)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-3.R', echo=TRUE)
View(tab)
View(tab_tidy)
View(tab)
View(df)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(df_tidy)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(df_tidy)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/Tasks/Class_03-4.R', echo=TRUE)
View(okruga)
View(okruga_tidy)
View(okruga)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/4_Gorbarenko/4_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(df)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
