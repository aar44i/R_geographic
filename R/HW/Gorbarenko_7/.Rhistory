polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region,year = year,emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(region, year) #%>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
# arrange((delta)) %>%
# filter(row_number() == 1)
View(polluters)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region,year = year,emissions = value.x,
capture = value.y, delta = capture - emissions) #%>%
#group_by(region, year) #%>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
# arrange((delta)) %>%
# filter(row_number() == 1)
View(polluters)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region,year = year,emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(region, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange((delta)) %>%
filter(row_number() == 1)
View(polluters)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug"))
View(polluters)
transmute(region = Region,year = year,emissions = value.x,
capture = value.y, delta = capture - emissions)
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region,year = year,emissions = value.x,
capture = value.y, delta = capture - emissions)
View(polluters)
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region,year = year, okrug = okrug, emissions = value.x,
capture = value.y, delta = capture - emissions) #%>%
View(polluters)
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region,year = year, okrug = okrug, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange((delta)) %>%
filter(row_number() == 1)
View(polluters)
View(polluters)
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange((delta)) %>%
filter(row_number() == 1)
View(polluters)
View(polluters)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange((delta)) %>%
filter(row_number() == 1)
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW/Gorbaremko_3')
getwd()
emissions = read_excel('emissions.xlsx', 1,skip = 1, col_types = c("text","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")) # счет данных с первого листа фаила
capture = read_excel('emissions.xlsx', 2, skip = 1, col_types = c("text","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")) # счет данных со второго листа фаила
colnames(emissions) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016") # переименование столбцов
colnames(capture) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016")
str(emissions) # проверяем типы данных
str(capture)
Flt_e = stringr::str_detect(emissions$Region, 'Федерация|федеральный округ') # ищем округа
Flt_c = stringr::str_detect(capture$Region, 'Федерация|федеральный округ')
(Flt_emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(Flt_e, Region, NULL)) %>%
tidyr::fill(okrug) %>%
filter(!Flt_e) %>%
pivot_longer(cols = y2005:y2016,
names_to = 'year',
names_prefix = 'y',
names_ptypes = list(year = integer()),
values_to = 'value'))
(Flt_capture = capture %>% #  Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(Flt_c, Region, NULL)) %>%
tidyr::fill(okrug) %>%
filter(!Flt_c) %>%
pivot_longer(cols = y2005:y2016,
names_to = 'year',
names_prefix = 'y',
names_ptypes = list(year = integer()),
values_to = 'value'))
(Polluters = Flt_emissions %>% # обьединение таблиц по заграязнению и улавливанию в одну и нахождение между ними разницы
inner_join(Flt_capture, by = c("Region" = "Region", "year" = "year")) %>%
transmute(Region = Region,
okrug = okrug.x,
year = year,
emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange((delta)) %>%
filter(row_number() == 1))
write_xlsx(Polluters, "polluters.xlsx") # вывод фрейма в фаил
View(Polluters)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange((delta)) %>%
filter(row_number() == 1)
write_xlsx(Polluters, "polluters.xlsx")
write_xlsx(polluters, "polluters.xlsx")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW_2020')
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange((delta)) %>%
filter(row_number() == 1)
write_xlsx(polluters, "polluters.xlsx")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW_2020')
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number() == 1)
write_xlsx(polluters, "polluters.xlsx")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number())
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number() == 2)
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number() == 0)
View(polluters)
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number() == 1)
View(polluters)
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) #%>%
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW_2020')
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) #%>%
polluterssss = polluters %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number() == 1)
write_xlsx(polluters, "polluters.xlsx")
View(polluterssss)
View(polluters)
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW_2020')
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number() == 1)
write_xlsx(polluters, "polluters.xlsx")
View(emissions)
View(polluters)
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW_2020')
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
emissions = emissions %>% # Первый конвейер манипуляций для выбросов
mutate(okrug = if_else(str_detect(emissions$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(emissions$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
capture = capture %>% # Второй конвейер манипуляций для улавоивания
mutate(okrug = if_else(str_detect(capture$Region, 'федеральный округ'), Region, NULL)) %>%
fill(okrug) %>%
filter(!str_detect(capture$Region, 'Федерация|федеральный округ'))  %>%
pivot_longer(cols = 2:9, names_to = "year", values_to = "value")
# присоединение таблиц
polluters = inner_join(emissions, capture, by = c("Region" = "Region",
"year" = "year", "okrug" = "okrug")) %>%
# вычисление разницы
transmute(region = Region, okrug = okrug, year = year, emissions = value.x,
capture = value.y, delta = capture - emissions) %>%
group_by(okrug, year) %>% # нахождение субьекта с наихудшим соотношением выбросов и улавливания
arrange(delta) %>%
filter(row_number() == 1))
write_xlsx(polluters, "polluters.xlsx")
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions')
oka = read_excel('oka.xlsx')
summary(df)
df = read_excel('oka.xlsx')
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions')
df = read_excel('oka.xlsx')
summary(df)
View(df)
df = na.omit(df)
View(df)
plot(x = df$dist, y = df$len)
hist(x = df$dist, y = df$len)
hist(df$area, labels = T, breaks = 3)
plot(x = df$side, y = df$area)
df$side = factor(df$side)
levels(df$side)
plot(x = df$side, y = df$area)
df$size = cut(df$area, labels = c('small', 'mid', 'big'),
breaks = c(0, 3500, 10000, 100000))
View(df)
View(df)
plot(x = df$size, y = df$len)
View(df)
library(ggplot)
ggplot(df, aes())
ggplot(df, aes())
ggplot(df,)
ggplot(df, aes())
library(ggplot2)
ggplot(df, aes())
library(ggplot2)
+ geom_boxplot() + stat_boxplot(geom = 'errorbar')
ggplot(df, aes(x = size, y = len, col = size)) +
geom_boxplot() + stat_boxplot(geom = 'errorbar')
ggplot(df, aes(x = area)) + geom_histogram(binwidth =  5000)
ggplot(df, aes(x = area, fill = size)) + geom_histogram(binwidth =  5000)
ggplot(df, aes(x = area, fill = size)) + geom_histogram(binwidth =  5000, position = 'dodge')
ggplot(df, aes(x = area, fill = side)) + geom_histogram(binwidth =  5000, position = 'dodge')
ggplot(df, aes(x = dist, y = area, col = side)+ geom_point(size = 5))
ggplot(df, aes(x = dist, y = area, col = side)+ geom_point(size = 5))
ggplot(df, aes(x = len, y = area, col = side)+ geom_point(size = 5))
ggplot(df, aes(x = len, y = area, col = side))+ geom_point(size = 5)
ggplot(df, aes(x = len, y = area, col = side))+ geom_point(size = 5) +
get_smooth(method = 'lm', formula = y ~ x)
ggplot(df, aes(x = len, y = area, col = side))+ geom_point(size = 5) +
get_smooth(method = 'lm', formula = y ~ x, se = F)
ggplot(df, aes(x = len, y = area, col = side))+ geom_point(size = 5) +
geom_smooth(method = 'lm', formula = y ~ x, se = F)
#3
ggplot(df, aes(x = len, y = area))+ geom_point(size = 5) +
geom_smooth(method = 'lm', formula = y ~ x, se = F)
area_model = lm(data = df, formula = area ~ len)
df$pred_area = predict(area_model)
View(df)
ggplot(df, aes(x = len)) + geom_point(aes(y = area, col = 'факт')) +
geom_line(aes(y = pred_area, col = 'модель'), size = 1)
cor(df$area, df$pred_area)
coef(area_model)
coef(area_model)[1]
model_text
coef_a = as.character(round(coef(area_model)[2],2))
coef_b = as.character(round(coef(area_model)[1],2))
cor_coef = as.character(round(cor(df$area, df$pred_area), 2))
model_text = paste('y = ', coef_a, coef_b, "R = ", cor_coef)
model_text
ggplot(df, aes(x = len)) + geom_point(aes(y = area, col = 'факт')) +
geom_line(aes(y = pred_area, col = 'модель'), size = 1) +
geom_text(aes(x =100, y = 40000, label = model_text))
model_text = paste('y = ', coef_a, '* x', coef_b, "R = ", cor_coef)
model_text
ggplot(df, aes(x = len)) + geom_point(aes(y = area, col = 'факт')) +
geom_line(aes(y = pred_area, col = 'модель'), size = 1) +
geom_text(aes(x =100, y = 40000, label = model_text))
p = ggplot(df, aes(x = len)) + geom_point(aes(y = area, col = 'факт')) +
geom_line(aes(y = pred_area, col = 'модель'), size = 1) +
geom_text(aes(x =100, y = 40000, label = model_text))
ggsave()
col
ggsave(plot = p, filename = 'linear_model.png', device = 'png', width = 10, heigt = 8,
units = 'in', dpi = 300)
ggsave(plot = p, filename = 'linear_model.png', device = 'png', width = 10, height = 8,
units = 'in', dpi = 300)
