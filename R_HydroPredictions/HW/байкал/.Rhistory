lat_FINISH = as.numeric(readline('Введите широту конечной точки:'))
long_FINISH = as.numeric(readline('Введите долготу конечной точки:'))
D = acos(sin(lat_START) * sin(lat_FINISH) + cos(lat_START) * cos(lat_FINISH) * cos( long_START - long_FINISH ))
S = D * 6371
T = S / 850
S = round(S, 0)
T = round(T, 2) # с округлением до 0.5 пока не справился
#  if (long_START < 0 | long_FINISH < 0) {
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#   } else {
#    Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#   } else {
#    Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
# }
#  } else if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0) {
#  if (long_START < 0 | long_FINISH < 0) {
#     if (360 - (abs(long_START) + abs(long_FINISH)) < (abs(long_FINISH) + abs(long_FINISH)) ) {
#    Answer = "Маршрут полета не пересекает нулевой меридиан и пересекает 180-й меридиан."
#   } else {
#    Answer = "Маршрут полета  пересекает нулевой меридиан и   не пересекает 180-й меридиан."
# }
#  } else if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0) {
#   Answer = "Маршрут полета не пересекает нулевой меридиан и не пересекает 180-й меридиан."
#  }
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW_1.R', echo=TRUE)
lat_START = as.numeric(readline('Введите широту начальной точки:'))
long_START = as.numeric(readline('Введите долготу начальной точки:'))
lat_FINISH = as.numeric(readline('Введите широту конечной точки:'))
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
i = 0
while(i < 10) {
i = i+1
print(i)
}
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
#Cities  #пробный вывод фреймов
#Sections
Cities$Distance_source[1]
#Cities  #пробный вывод фреймов
#Sections
Cities$Distance_source[68]
#Cities  #пробный вывод фреймов
#Sections
Cities$Distance_source[6]
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#lat_START = lat_START * pi
phi
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
} else {
Answer = "Маршрут полета  пересекает нулевой меридиан и не пересекает 180-й меридиан."
}
} else if (long_START > 0 & long_FINISH > 0 | long_START < 0 & long_FINISH < 0) {
Answer = "Маршрут полета не пересекает нулевой меридиан и не пересекает 180-й меридиан."
}
Answer
print(paste("Длина полета составила", S, "км, время в пути ~",Time, " часов.", Answer))
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/1_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/2_Gorbarenko.R', echo=TRUE)
getwd()
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
library(devtools)
assignInNamespace("version_info", c(devtools:::version_info, list("3.5" = list(version_min = "3.3.0", version_max = "99.99.99", path = "bin"))), "devtools")
library(devtools)
library(desc)
detach("package:desc", unload = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
R.version()
R.Version()
assignInNamespace("version_info", c(devtools:::version_info, list("3.6" = list(version_min = "3.3.0", version_max = "99.99.99", path = "bin"))), "devtools")
devtools:::version_info
devtools::version_info
devtools::install_github("tsamsonov/grwat")
devtools::install_github("tsamsonov/grwat")
devtools::install_github("tsamsonov/grwat")
devtools::install_github("tsamsonov/grwat")
devtools::install_github("tsamsonov/grwat")
> devtools::install_github("tsamsonov/grwat")
devtools::install_github("tsamsonov/grwat")
devtools::install_github("tsamsonov/grwat")
devtools::install_github("tsamsonov/grwat")
library(devtools)
devtools::install_github("tsamsonov/grwat")
library(devtools)
tinytex:::is_tinytex()
tinytex:::is_tinytex()
tinytex:::is_tinytex()
tinytex:::is_tinytex()
tinytex:::is_tinytex()
install.packages("devtools")
devtools::install_github("tsamsonov/grwat")
install.packages('tinytex')
tinytex::install_tinytex()
tinytex:::is_tinytex()
Sys.setlocale("LC_ALL","Russian")
# - выписать значения фактического и прогнозного притока воды
# в Иркутское водохранилище (оз. Байкал) за 2015 - 2016 годы из Бюллетеней Гидрометцентра
# - добавить значения вместо отсутствующих в полученный на занятии датафрейм
# с помощью индексирования его (год, месяц, столбец)
xls_files <- list.files(pattern = '*.xls')
xls_files
Sys.setlocale("LC_ALL","Russian")
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/байкал')
xls_files = list.files(pattern = '.xls')
xls_files
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/байкал')
Sys.setlocale("LC_ALL","Russian")
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
xls_files
Sys.setlocale("LC_ALL","Russian")
library(readxl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
xls_files
Sys.setlocale("LC_ALL","Russian")
library(readxl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
View(new_files)
Sys.setlocale("LC_ALL","Russian")
library(readxl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
read_prog = function(x){
df = read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
}
prog_list = lapply(xls_files, read_prog)
Sys.setlocale("LC_ALL","Russian")
library(readxl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
read_prog = function(x){
df = read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
read_prog = function(x){
df = read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
}
prog_list = lapply(xls_files, read_prog)
Sys.setlocale("LC_ALL","Russian")
library(readxl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/Mine/байкал')
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW_2020')
emissions = read_excel('emissions.xlsx', 1,skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(emissions)[1] = "Region"
capture = read_excel('emissions.xlsx', 2, skip = 1,
col_types = c('text', rep('numeric', 8)))
colnames(capture)[1] = "Region"
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/HW_2020')
getwd()
xls_files = list.files(pattern = '.xls')
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/Class/HW/байкал')
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
read_prog <- function(x){
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
}
# ...и применяем ее ко всем файлам с помощью lapply
prog_list <- lapply(xls_files, read_prog)
# после чего превращаем из списка в датафрейм
prog_list_df <- do.call(what = rbind, args = prog_list)
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
new_files = read_excel('2015-2016.xlsx')
View(new_files)
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
df_15_16 = read_excel('2015-2016.xlsx')
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
df_15_16 = read_excel('2015-2016.xlsx')
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
df_15_16 = read_excel('2015-2016.xlsx')
View(df_15_16)
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
# df_15_16 = read_excel('2015-2016.xlsx')
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
df_15_16 = read_excel('2015_2016.xlsx')
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
df_15_16 = read_excel('new_data.xlsx')
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
View(df_15_16)
Sys.setlocale("LC_ALL","Russian")
library(readxl)
library(tidyverse)
library(writexl)
setwd('C:/Users/gorba/DataSciense/R_geographic/R_HydroPredictions/HW/байкал')
# C:\Users\gorba\DataSciense\R_geographic\R_HydroPredictions\HW\байкал
getwd()
xls_files = list.files(pattern = '.xls')
# df_15_16 = read_excel('new_data.xlsx')
# вариант 1: делаем считывание всех файлов в цикле с добавлением в пустой датафрейм по одному
prog_df <- data.frame()
for (x in xls_files){
print(x)
df <- read_xls(x, skip = 10,
col_names = c('year', 'pred', 'pred1', 'obs'),
col_types = c('numeric', 'numeric', 'skip', 'numeric'))
print(dim(df))
prog_df <- rbind(prog_df, df)
}
getwd()
