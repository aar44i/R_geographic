library(readxl)
library(tidyverse)
library(writexl)
soil_data = read_excel('soil_data.xls', 1,  # чтение фаила
col_types = c(rep('numeric', 2), rep('text', 240)))
description = read_excel('soil_data.xls',2 , col_names = FALSE,
col_types = c(rep('text', 2)))
colnames(description) = c('name', 'desc')
is_leap = function(x){
return(x %% 400 == 0 ||
((x %% 4 == 0) && (x %% 100 != 0)))
}
y = as.integer(readline('Enter'))
is_leap = function(x){
return(x %% 400 == 0 ||
((x %% 4 == 0) && (x %% 100 != 0)))
}
is_leap = function(x){
return(x %% 400 == 0 ||
((x %% 4 == 0) && (x %% 100 != 0)))
}
y = as.integer(readline('Enter'))
cat(ifelse(is_leap(y), 'високостный', 'обычный'))
hiking_time(prof / 1000)
# # Функция Тоблера показывает зависимость скорости пешего маршрута (в км/ч)
# от угла наклона на местности. Предположим, в вашем распоряжении имеется матрица профиля рельефа,
# в которой в одном столбце указано расстояние от начала маршрута,
# а во втором — абсолютная отметка точки. Напишите функцию hiking_time(profile),
# которая вычисляет время прохождения маршрута на основе переданной ей матрицы.
# Используйте для тестирования функции маршрут из 10 точек с шагом в 1 км
# и случайным разбросом высот в диапазоне от 500 до 1000 метров (равномерное распределение).
get_speed = function(slope){
return(6 * exp(-3.5 * abs(slope * 0.5)))
}
hiking_time = function(profile){
time = 0
# dh = profile[2:nrow(profile), 2] - profile[2:nrow(profile) - 1, 2]
# dx = profile[2:nrow(profile), 2] - profile[2:nrow(profile) - 1, 1]
dh = diff(profile[, 2])
dx = diff(profile[, 1])
speed = get_speed(dh/dx)
time = sqrt(dh * dh + dx * dx) / speed
return(sum(time))
}
prof = cbind(seq(0, 10000, 1000),
runif(10, 500, 1000))
hiking_time(prof / 1000)
plot(prof)
plot(prof, type = 'l')
library(readxl)
library(tidyverse)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/Tasks/CW_2020')
wind = read_excel('wind.xlsx')
View(wind)
library(readxl)
library(tidyverse)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/Tasks/CW_2020')
tab = read_excel('wind.xlsx') %>%
filter(dir != 'штиль')
library(readxl)
library(tidyverse)
setwd('C:/Users/gorba/DataSciense/R_geographic/R/Tasks/CW_2020')
tab = read_excel('wind.xlsx') %>%
rename(dir = 1) %>%
filter(dir != 'штиль')
View(wind)
#View(wind)
sapply(tab[-1], which.max)
View(wind)
#View(wind)
prime_dir = tibble(month = colnames(tab[-1]),
dir = tab[num, 'dir'])
setwd('C:/Users/gorba/DataSciense/R_geographic/R/Tasks/CW_2020')
tab = read_excel('wind.xlsx') %>%
rename(dir = 1) %>%
filter(dir != 'штиль')
#View(wind)
num = sapply(tab[-1], which.max)
prime_dir = tibble(month = colnames(tab[-1]),
dir = tab[num, 'dir'])
#
View(prime_dir)
