setwd("C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew")
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew/3.R', echo=TRUE)
View(emissions)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew/3.R', encoding = 'UTF-8', echo=TRUE)
Flt = stringr::str_detect(emissions$Region, 'федеральный округ') # ищем округа
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew/3.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
getwd()
setwd("C:/Users/gorba/Desktop/Univercity/3 курс/R/HW")
emissions = read_excel('emissions.xlsx', 1,skip = 1) # счет данных с первого листа фаила
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew/3.R', encoding = 'UTF-8', echo=TRUE)
View(emissions)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew/3.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_GorbaremkoNew/3.R', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(Flt_emissions2)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
View(Polluters)
?куфвчд
?readxl
?read_excel
library(tidyverse)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1) # счет данных с первого листа фаила
capture = read_excel('emissions.xlsx', 2, skip = 1) # счет данных со второго листа фаила
colnames(emissions) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016") # переименование столбцов
colnames(capture) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016")
#capture$y2012 = as.numeric(capture$y2012) # изменил типы данных для некторых столбцов
# capture$y2015 = as.numeric(capture$y2015)
# capture$y2016 = as.numeric(capture$y2016)
str(Flt_emissions) # проверяем типы данных
str(Flt_capture)
#capture$y2012 = as.numeric(capture$y2012) # изменил типы данных для некторых столбцов
# capture$y2015 = as.numeric(capture$y2015)
# capture$y2016 = as.numeric(capture$y2016)
str(emissions) # проверяем типы данных
str(capture)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1, col_types = "numeric") # счет данных с первого листа фаила
capture = read_excel('emissions.xlsx', 2, skip = 1, col_types = "numeric") # счет данных со второго листа фаила
colnames(emissions) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016") # переименование столбцов
colnames(capture) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016")
#capture$y2012 = as.numeric(capture$y2012) # изменил типы данных для некторых столбцов
# capture$y2015 = as.numeric(capture$y2015)
# capture$y2016 = as.numeric(capture$y2016)
str(emissions) # проверяем типы данных
str(capture)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
View(Polluters)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1, col_types = "numeric") # счет данных с первого листа фаила
capture = read_excel('emissions.xlsx', 2, skip = 1, col_types = "numeric") # счет данных со второго листа фаила
colnames(emissions) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016") # переименование столбцов
colnames(capture) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016")
#str(emissions) # проверяем типы данных
#str(capture)
Flt_e = stringr::str_detect(emissions$Region, 'Федерация|федеральный округ') # ищем округа
Flt_c = stringr::str_detect(capture$Region, 'Федерация|федеральный округ')
(Flt_emissions = mutate(emissions, okrug = if_else(Flt_e, Region, NULL))) # перенесем названия округов в новый столбец
(Flt_emissions = tidyr::fill(Flt_emissions, okrug))
View(Flt_emissions)
View(emissions)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
library(readxl)
library(tidyverse)
library(writexl)
emissions = read_excel('emissions.xlsx', 1,skip = 1, col_types = c("text","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")) # счет данных с первого листа фаила
emissions = read_excel('emissions.xlsx', 1,skip = 1, col_types = c("text","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")) # счет данных с первого листа фаила
capture = read_excel('emissions.xlsx', 2, skip = 1, col_types = c("text","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")) # счет данных со второго листа фаила
colnames(emissions) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016") # переименование столбцов
colnames(capture) = c( "Region", "y2005", "y2010", "y2011", "y2012", "y2013", "y2014", "y2015", "y2016")
str(emissions) # проверяем типы данных
str(capture)
Flt_e = stringr::str_detect(emissions$Region, 'Федерация|федеральный округ') # ищем округа
Flt_c = stringr::str_detect(capture$Region, 'Федерация|федеральный округ')
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
View(Polluters)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
View(Polluters)
source('C:/Users/gorba/Downloads/3_Gorbarenko (1).R', encoding = 'UTF-8', echo=TRUE)
View(Flt_emissions)
data("airquality")
force(airquality)
force(airquality)
View(airquality)
View(airquality)
mydata <- airquality[airquality$Month > 5]
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(Polluters)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
debugSource('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
(Flt_emissions = emissions %>%
mutate(emissions, okrug = if_else(Flt_e, Region, NULL)) %>%
tidyr::fill(Flt_emissions, okrug) %>%
filter(Flt_emissions, !Flt_e) %>%
pivot_longer(cols = y2005:y2016,
names_to = 'year',
names_prefix = 'y',
names_ptypes = list(year = integer()),
values_to = 'value'))
debugSource('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
install.packages("devtools")
library(devtools)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(devtools)
assignInNamespace("version_info", c(devtools:::version_info, list("3.5" = list(version_min = "3.3.0", version_max = "99.99.99", path = "bin"))), "devtools")
library(devtools)
assignInNamespace("version_info", c(devtools:::version_info, list("3.5" = list(version_min = "3.3.0", version_max = "99.99.99", path = "bin"))), "devtools")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(devtools)
assignInNamespace("version_info", c(devtools:::version_info, list("3.5" = list(version_min = "3.3.0", version_max = "99.99.99", path = "bin"))), "devtools")
library(rcmdcheck)
source('~/.active-rstudio-document', echo=TRUE)
detach("package:rcmdcheck", unload = TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(Polluters)
source('C:/Users/gorba/Desktop/Univercity/3 курс/R/HW/Gorbaremko_3/3_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
View(capture)
View(Polluters)
