mutate(delta = max_time - min_time) #%>%
# ungroup()
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time) #%>%
# ungroup()
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
View(stops)
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time) #%>%
ungroup()
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time) #%>%
#ungroup()
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time) %>%
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time)
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time)
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
col = colors,
cex = 0.7)
(tras_comp = group_by(routes, agency_code) %>% # подгтовка таблицы для  2  графика
summarise(n()) %>%
inner_join(transport_ent, by = c('agency_code' = 'agency_code')))
colnames(tras_comp) = c('agency_code', 'col', 'global_id', 'agency_name', 'agency_url', 'agency_timezone')
tras_comp = arrange(tras_comp, col)
par(mar = c(6, 11, 5, 5)) # построение 2 графика
barplot(tras_comp$col,
names.arg = tras_comp$agency_name,
main = 'Распределение маршрутов по перевозчикам',
xlab = 'Количество маршрутов',
las = 1,
cex.names = 0.7,
horiz = T,
xlim = c(0,1000),
col = 'lightblue')
sched_hour = as.numeric(substr(schedule$departure_time, 0,2)) # подгтовка таблицы для  3  графика
sched_min = round(as.numeric(substr(schedule$departure_time, 4,5))/60, digits = 1)
sched_time = sched_hour + sched_min
sched_time = sapply(sched_time, function(X)
{if (X > 24) X = X - 24
else X = X})
schedule = mutate(schedule, sched_time)
par(mar = c(5, 5, 5, 5)) # построение 3 графика
colors = rep('lightblue', 24)
colors[9] = 'red'
colors[19] = 'red'
hist(sched_time,
main = 'Количество отправлений с остановок общественного транспорта',
xlab = 'Час',
ylab = 'Количество отправлений',
breaks = seq(0, 24, 1),
xlim = c(0, 24),
ylim = c(0, 25000),
col = colors,
type = "l",
xaxt ='n',
cex.axis =  0.7,
cex.lab = 0.7,
cex.main = 0.8)
axis(side = 1,
at = seq(0, 24, 1),
tck = - 0.07,
cex.axis = 0.7)
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time)
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
col = colors,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
col = colors,
cex.names = 0.7,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
cex = 0.5,
cex.names = 0.7,
cex.main = 0.7,
col = colors)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
col = colors,
cex.names = 0.7,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.7,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1.3,
col = colors,
cex.names = 0.7,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1.1,
col = colors,
cex.names = 0.7,
cex = 0.7)
source('C:/Users/gorba/Desktop/Univercity/3 course/R/HW/Gorbarenko_5/5.R', encoding = 'UTF-8', echo=TRUE)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.7,
cex = 0.7)
(tras_comp = group_by(routes, agency_code) %>% # подгтовка таблицы для  2  графика
summarise(n()) %>%
inner_join(transport_ent, by = c('agency_code' = 'agency_code')))
colnames(tras_comp) = c('agency_code', 'col', 'global_id', 'agency_name', 'agency_url', 'agency_timezone')
tras_comp = arrange(tras_comp, col)
par(mar = c(6, 11, 5, 5)) # построение 2 графика
barplot(tras_comp$col,
names.arg = tras_comp$agency_name,
main = 'Распределение маршрутов по перевозчикам',
xlab = 'Количество маршрутов',
las = 1,
cex.names = 0.7,
horiz = T,
xlim = c(0,1000),
col = 'lightblue')
sched_hour = as.numeric(substr(schedule$departure_time, 0,2)) # подгтовка таблицы для  3  графика
sched_min = round(as.numeric(substr(schedule$departure_time, 4,5))/60, digits = 1)
sched_time = sched_hour + sched_min
sched_time = sapply(sched_time, function(X)
{if (X > 24) X = X - 24
else X = X})
schedule = mutate(schedule, sched_time)
par(mar = c(5, 5, 5, 5)) # построение 3 графика
colors = rep('lightblue', 24)
colors[9] = 'red'
colors[19] = 'red'
hist(sched_time,
main = 'Количество отправлений с остановок общественного транспорта',
xlab = 'Час',
ylab = 'Количество отправлений',
breaks = seq(0, 24, 1),
xlim = c(0, 24),
ylim = c(0, 25000),
col = colors,
type = "l",
xaxt ='n',
cex.axis =  0.7,
cex.lab = 0.7,
cex.main = 0.8)
axis(side = 1,
at = seq(0, 24, 1),
tck = - 0.07,
cex.axis = 0.7)
stops = schedule %>% # подгтовка таблицы для  4  графика
group_by(trip_id = as.character(trip_id)) %>%
summarise(num_stops = n(),
max_time = max(sched_time),
min_time = min(sched_time)) %>%
mutate(delta = max_time - min_time)
med = stops %>%
group_by(num_stops) %>%
summarise(delta = median(delta))
par(mar = c(5, 5, 5, 5)) # построение 4 графика
plot(stops$num_stops,
stops$delta,
main = 'Продолжительность маршрутов',
xlab = 'Количество остановок в маршруте',
ylab = 'Продолжительность маршрута, ч',
pch = 20,
col = 'gray',
ylim = c(0, 2),
cex.axis =  0.7,
cex.lab = 0.7)
lines(med$num_stops, med$delta, type = 'o', pch = 20, col = 'red')
legend('topright',  'медианное значение', lwd = 1, pch = 20, col = 'red',cex = 0.7, bg = 'white')
grid()
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.7,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.6,
cex = 0.7)
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.6,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.6,
cex = 0.7)
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.6,
cex.main = 0.7,
cex = 0.7)
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1.1,
col = colors,
cex.names = 0.6,
cex.main = 0.8,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.6,
cex.main = 0.8,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.5,
cex.main = 0.8,
cex = 0.7)
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.5,
cex.main = 0.8,
cex = 0.7)
(tras_comp = group_by(routes, agency_code) %>% # подгтовка таблицы для  2  графика
summarise(n()) %>%
inner_join(transport_ent, by = c('agency_code' = 'agency_code')))
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
#  radius = 1,
col = colors,
cex.names = 0.5,
cex.main = 0.8,
cex = 0.7)
par(mar = c(5, 5, 5, 5)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.5,
cex.main = 0.8,
cex = 0.7)
par(mar = c(7, 7, 7, 7)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.5,
cex.main = 0.8,
cex = 0.7)
par(mar = c(3, 3, 3, 3)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.5,
cex.main = 0.8,
cex = 0.7)
par(mar = c(3, 3, 3, 3)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.5,
#cex.main = 0.8,
cex = 0.7)
par(mar = c(3, 3, 3, 3)) # построение 1 графика
colors = brewer.pal(length(names_plot),'Accent')
pie(routes_types$col, names_plot,
main = "Соотношение количества маршрутов \n по видам транспорта",
clockwise = TRUE,
radius = 1,
col = colors,
cex.names = 0.5,
cex.main = 0.9,
cex = 0.7)
source('C:/Users/gorba/Desktop/Univercity/3 course/R/HW/Gorbarenko_5/5_Gorbarenko.R', encoding = 'UTF-8', echo=TRUE)
